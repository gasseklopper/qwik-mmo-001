@use 'sass:math';
@use 'vars';
@use 'mixins';

// #main {
// 	margin: 0 auto;
// 	width: 100%;
// 	max-width: vars.$reworkGrid__width;

// 	&.container {
// 		margin: 0 auto;
// 		width: 100%;
// 		max-width: 100%;
// 	}

// 	.container {
// 		background-color: aqua;
// 		margin: 0 auto;
// 		width: 100%;
// 		max-width: 100%;
// 	}

// 	&.container_full {
// 		margin: 0 auto;
// 		width: 100vw;
// 	}
// }

#main {
	&.container {
		margin: 0 auto;
		width: 100%;
		max-width: 100%;
		// max-width: vars.$reworkGrid__width;


		.container {
			margin: 0 auto;
			width: 100%;
			max-width: vars.$reworkGrid__width;
			// max-width: 100%;

		}
	}
}

.header__main {
	&.container {
		margin: 0 auto;
		width: 100%;
		max-width: 100%;
		// max-width: vars.$reworkGrid__width;


		.container {
			margin: 0 auto;
			width: 100%;
			max-width: vars.$reworkGrid__width;
			// max-width: 100%;

		}
	}
}


.row {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	box-sizing: border-box;
	margin: 0 auto;
	padding: 0 vars.$reworkGrid__outer;
	width: 100%;
	max-width: vars.$reworkGrid__width;
	max-width: 100%;
	;

	&--spacing {
		margin-bottom: -(vars.$gutter);
	}

	&--spacing>.column {
		margin-bottom: vars.$gutter;
	}

	@each $sizeName, $size in vars.$reworkGrid__sizes {
		@media (min-width: $size) {
			@include mixins.rowClasses($sizeName);
		}
	}

	.row {
		margin: 0 math.div(vars.$reworkGrid--gutter, -2);
		margin: 0 calc(var(--reworkGrid-gutter, #{vars.$reworkGrid__gutter}) / -2);
		padding: 0;
		width: auto;
		max-width: none;
	}

	.column {
		position: relative;
		box-sizing: border-box;
		text-align: start;
		padding: 0 math.div(vars.$reworkGrid--gutter, 2);
		padding: 0 calc(var(--reworkGrid-gutter, #{vars.$reworkGrid__gutter}) / 2);
		width: 100%;

		@each $sizeName, $size in vars.$reworkGrid__sizes {
			@media (min-width: $size) {
				@include mixins.columnClasses($sizeName);
			}
		}
	}
}


// RTL Adjustemnts on grid system Default LTR
.dir-rtl {
	.row {
		flex-direction: row-reverse;
	}

	.column {
		text-align: end;
	}
}